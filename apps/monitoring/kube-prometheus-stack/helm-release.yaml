---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 51.9.1
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  values:
    kubeEtcd:
      enabled: false

    grafana:
      enabled: false
      forceDeployDashboards: true

    alertmanager:
      ingress:
        enabled: true
        pathType: Prefix
        hosts:
          - &host_alertmanager alerts.home.lucadev.de
        tls:
          - hosts:
              - *host_alertmanager
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: Alarmzentrale
          gethomepage.dev/group: Überwachung
          gethomepage.dev/icon: alertmanager
          gethomepage.dev/name: Alertmanager

      alertmanagerSpec:
        secrets:
          - alertmanager-secret

      config:
        receivers:
          - name: "null"
          - name: "pushover"
            pushover_configs:
              - html: true
                token_file: /etc/alertmanager/secrets/alertmanager-secret/pushover_api_token
                user_key_file: /etc/alertmanager/secrets/alertmanager-secret/pushover_api_userkey
                send_resolved: true
                priority: |-
                  {{ if eq .Status "firing" }}1{{ else }}0{{ end }}
                url_title: View in Alert Manager
                title: |-
                  [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }}
                message: |-
                  {{- range .Alerts }}
                    {{- if ne .Labels.severity "" }}
                      <b>Severity:</b> <i>{{ .Labels.severity }}</i>
                    {{- else }}
                      <b>Severity:</b> <i>N/A</i>
                    {{- end }}
                    {{- if ne .Annotations.description "" }}
                      <b>Description:</b> <i>{{ .Annotations.description }}</i>
                    {{- else if ne .Annotations.summary "" }}
                      <b>Summary:</b> <i>{{ .Annotations.summary }}</i>
                    {{- else if ne .Annotations.message "" }}
                      <b>Message:</b> <i>{{ .Annotations.message }}</i>
                    {{- else }}
                      <b>Description:</b> <i>N/A</i>
                    {{- end }}
                    {{- if gt (len .Labels.SortedPairs) 0 }}
                      <b>Details:</b>
                      {{- range .Labels.SortedPairs }}
                        • <b>{{ .Name }}:</b> <i>{{ .Value }}</i>
                      {{- end }}
                    {{- end }}
                  {{- end }}
        route:
          group_by: ["alertname", "job"]
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 6h
          receiver: "pushover"
          routes:
            - receiver: "null"
              matchers:
                - alertname =~ "InfoInhibitor|Watchdog"
            - receiver: "pushover"
              matchers:
                - severity = critical
              continue: true
        inhibit_rules:
          - source_matchers:
              - severity = "critical"
            target_matchers:
              - severity = "warning"
            equal: ["alertname", "namespace"]

    ###
    ### Prometheus instance values
    ###
    prometheus:
      ingress:
        enabled: true
        pathType: Prefix
        hosts:
          - &host_prometheus prometheus.home.lucadev.de
        tls:
          - hosts:
              - *host_prometheus
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: Metrik-Datenbank
          gethomepage.dev/group: Überwachung
          gethomepage.dev/icon: prometheus
          gethomepage.dev/name: Prometheus
          gethomepage.dev/widget.type: prometheus
          gethomepage.dev/widget.url: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090

      prometheusSpec:
        ruleSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        alertingEndpoints:
          - namespace: monitoring
            name: alertmanager
            port: 9093
            apiVersion: v2
        additionalScrapeConfigs:
          - job_name: solar
            scrape_interval: 1m
            scrape_timeout: 10s
            honor_timestamps: true
            metrics_path: /api/prometheus/metrics
            static_configs:
              - targets:
                  - "192.168.1.60"
          - job_name: power-meter
            scrape_interval: 1m
            scrape_timeout: 10s
            honor_timestamps: true
            metrics_path: /metrics
            static_configs:
              - targets:
                  - "192.168.1.87"

        enableAdminAPI: true
        #retention: 10d
        #retentionSize: "10GB"
        scrapeInterval: 1m

  postRenderers:
    - kustomize:
        patches:
          - target:
              version: v1
              kind: ConfigMap
              labelSelector: grafana_dashboard in (1)
            patch: |-
              apiVersion: v1
              kind: ConfigMap
              metadata:
                name: not-used
                namespace: not-used
                annotations:
