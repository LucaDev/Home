---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: immich-server
  namespace: media
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system

  values:
    controllers:
      immich-server:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v2.2.1
            env:
              # General
              TZ: "Europe/Berlin"
              IMMICH_MEDIA_LOCATION: &mediaLocation /usr/src/app/upload
              # Database
              DB_HOSTNAME: "shared-pg-rw.databases.svc.cluster.local"
              DB_USERNAME: "immich"
              DB_DATABASE_NAME: "immich"
              # Redis
              REDIS_HOSTNAME: shared-redis.databases.svc.cluster.local
              REDIS_PORT: "6379"
              # Metrics
              IMMICH_METRICS: true
            envFrom:
              - secret: immich-secret
            resources:
              requests:
                cpu: 100m
                memory: 300Mi
              limits:
                memory: 8000Mi
                amd.com/gpu: 0
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /api/server/ping
                    port: http
              readiness: *probes
              startup:
                enabled: false

    service:
      app:
        controller: immich-server
        primary: true
        ports:
          http:
            port: 2283
            primary: true
          metrics-api:
            port: 8081
          metrics-ms:
            port: 8082

    serviceMonitor:
      app:
        serviceName: app
        endpoints:
          - port: metrics-api
            scheme: http
            path: /metrics
          - port: metrics-ms
            scheme: http
            path: /metrics

    persistence:
      library:
        type: persistentVolumeClaim
        existingClaim: immich-data
        globalMounts:
          - path: *mediaLocation

    route:
      app:
        hostnames:
          - photos.lucadev.de
        parentRefs:
          - name: envoy
            namespace: networking
            sectionName: https
        rules:
          - backendRefs:
              - name: app
                port: 2283
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: Fotos
          gethomepage.dev/group: Medien
          gethomepage.dev/icon: immich
          gethomepage.dev/name: Photos
          gethomepage.dev/weight: "-90"
          gethomepage.dev/widget.type: immich
          gethomepage.dev/widget.url: https://photos.lucadev.de
          gethomepage.dev/widget.key: "{{`{{HOMEPAGE_VAR_IMMICH_APIKEY}}`}}"
          gethomepage.dev/widget.fields: "[\"photos\", \"videos\", \"storage\"]"
          gethomepage.dev/pod-selector: >-
            app.kubernetes.io/instance in (
                immich-server,
                immich-machine-learning
            )
