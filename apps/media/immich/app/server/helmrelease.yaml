---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: immich-server
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    controllers:
      immich-server:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.112.1
            env:
              # General
              #IMMICH_LOG_LEVEL: verbose
              TZ: "Europe/Berlin"
              IMMICH_MEDIA_LOCATION: &mediaLocation /usr/src/app/upload
              # Ports
              IMMICH_PORT: &port 3001
              # Database
              DB_HOSTNAME:
                value: "immich-rw.media.svc.cluster.local"
              DB_USERNAME:
                valueFrom:
                  secretKeyRef:
                    name: immich-app
                    key: username
              DB_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: immich-app
                    key: password
              DB_DATABASE_NAME:
                value: "app"
              # Redis
              REDIS_HOSTNAME: shared-redis.databases.svc.cluster.local
              REDIS_PORT: "6379"
              # Metrics
              IMMICH_METRICS: true
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 8000Mi
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /api/server-info/ping
                    port: http
              readiness: *probes
              startup:
                enabled: false

    service:
      app:
        controller: immich-server
        primary: true
        ports:
          http:
            port: *port
            primary: true
          metrics-api:
            port: 8081
          metrics-ms:
            port: 8082

    serviceMonitor:
      app:
        serviceName: app
        endpoints:
          - port: metrics-api
            scheme: http
            path: /metrics
          - port: metrics-ms
            scheme: http
            path: /metrics

    persistence:
      library:
        type: persistentVolumeClaim
        existingClaim: immich-data
        globalMounts:
          - path: *mediaLocation

    ingress:
      app:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: Fotos
          gethomepage.dev/group: Medien
          gethomepage.dev/icon: immich
          gethomepage.dev/name: Photos
          gethomepage.dev/weight: "-90"
          gethomepage.dev/widget.type: immich
          gethomepage.dev/widget.url: https://photos.home.lucadev.de
          gethomepage.dev/widget.key: "{{`{{HOMEPAGE_VAR_IMMICH_APIKEY}}`}}"
          gethomepage.dev/widget.fields: "[\"photos\", \"videos\", \"storage\"]"
          gethomepage.dev/pod-selector: >-
            app.kubernetes.io/instance in (
                immich-server,
                immich-machine-learning
            )
        hosts:
          - host: &host photos.home.lucadev.de
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
          - host: &host2 photos.pub.lucadev.de
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
              - *host2
