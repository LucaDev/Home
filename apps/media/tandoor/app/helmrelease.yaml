---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: tandoor
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system

  values:
    controllers:
      tandoor:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/tandoorrecipes/recipes
              tag: 2.0.3
            env:
              COMMENT_PREF_DEFAULT: 0
              DEBUG: 0
              ENABLE_SIGNUP: 0
              FRACTION_PREF_DEFAULT: 0
              MAX_OWNED_SPACES_PREF_DEFAULT: 0
              SHOPPING_MIN_AUTOSYNC_INTERVAL: 5
              SOCIAL_DEFAULT_ACCESS: 1
              SOCIAL_DEFAULT_GROUP: user
              DB_ENGINE: django.db.backends.postgresql
              POSTGRES_HOST: shared-pg-rw.databases.svc.cluster.local
              POSTGRES_PORT: 5432
              POSTGRES_DB: tandoor
              POSTGRES_USER: "tandoor"
              AI_MODEL_NAME: openai/gpt-4o
            envFrom:
              - secretRef:
                  name: tandoor-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /accounts/login/
                    port: http
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /accounts/login/
                    port: http
                  failureThreshold: 30
                  periodSeconds: 10
            resources:
              requests:
                cpu: 10m
                memory: 512Mi
              limits:
                memory: 768Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch

    service:
      app:
        controller: tandoor
        ports:
          http:
            port: 80

    ingress:
      app:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: Rezepte
          gethomepage.dev/group: Medien
          gethomepage.dev/icon: tandoor-recipes.svg
          gethomepage.dev/name: Tandoor
        hosts:
          - host: &host tandoor.lucadev.de
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      files:
        existingClaim: tandoor-data
        advancedMounts:
          tandoor:
            app:
              - path: /opt/recipes/mediafiles
                subPath: mediafiles
              - path: /opt/recipes/staticfiles
                subPath: staticfiles
      tmpfs:
        type: emptyDir
        advancedMounts:
          tandoor:
            app:
              - path: /opt/recipes/cookbook/static/django_js_reverse
                subPath: django_js_reverse
              - path: /var/lib/nginx/logs
                subPath: nginx_logs
              - path: /var/lib/nginx/tmp
                subPath: nginx_tmp
              - path: /tmp
                subPath: tmp
